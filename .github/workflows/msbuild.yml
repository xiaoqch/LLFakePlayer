name: Build Plugin

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./LLFakePlayer.sln
  BDS_VERSION: 1.18.30.04

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  Platform: X64

jobs:
  pre-process:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Download BDS
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir LiteLoaderSDK/Tools/bedrock_server
        curl -L -o LiteLoaderSDK/Tools/bedrock_server/bedrock_server.zip https://minecraft.azureedge.net/bin-win/bedrock-server-${{ env.BDS_VERSION }}.zip
        unzip -q LiteLoaderSDK/Tools/bedrock_server/bedrock_server.zip -d LiteLoaderSDK/Tools/bedrock_server/
      shell: bash
      
    - name: Build Library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd LiteLoaderSDK/Tools
        LibraryBuilder.exe -o ../Lib ./bedrock_server
      shell: cmd
      
#     - name: Cache Libs
#       uses: actions/cache@v2.1.7
#       with:
#         # A list of files, directories, and wildcard patterns to cache and restore
#         path: LiteLoaderSDK/Tools/bedrock_server/
#         # An explicit key for restoring and saving the cache
#         key: https://minecraft.azureedge.net/bin-win/bedrock-server-1.18.2.03.zip
#         # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
#         #restore-keys:  optional
#         # The chunk size used to split up large files during upload, in bytes
#         #upload-chunk-size:  optional

    

      
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1

#     - name: Restore NuGet packages
#       working-directory: ${{env.GITHUB_WORKSPACE}}
#       run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Plugin
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        MSBuild.exe ${{env.SOLUTION_FILE_PATH}} -property:Configuration=${{env.BUILD_CONFIGURATION}}
      shell: bash
    
    - name: copy dll and pdb files
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        mkdir output/
        cp -f x64/Release/*.dll output/
        mkdir output/LLFakePlayer/
        cp -f x64/Release/*.pdb output/LLFakePlayer/
      shell: bash
    
    - name: upload files
      uses: actions/upload-artifact@v2
      with:
        name: LLFakePlayer
        path: ${{ github.workspace }}/output/

    - name: Archive
      working-directory: ${{env.GITHUB_WORKSPACE}}
      if: startsWith(github.ref, 'refs/tags/v')
      run: Compress-Archive -Path output/* output/LLFakePlayer.zip

    - name: Prepare for creating Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      id: rel
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/*}
        mv output/LLFakePlayer.zip output/LLFakePlayer-${GITHUB_REF#refs/tags/*}.zip
      shell: bash

    - name: Create New Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        token: ${{ secrets.ACTIONS_TOKEN }}
        body_path: ${{ github.workspace }}/CHANGELOG.txt
        files: ${{ github.workspace }}\output\LLFakePlayer-${{ steps.rel.outputs.tag }}.zip
      env:
          GITHUB_REPOSITORY: xiaoqch/LLFakePlayer 
